name: simple-bank-unit-tests

on:
    pull_request:
        branches: [ 'main' ]

jobs:
    test:
        runs-on: ubuntu-latest
        services:
              postgres:
                image: postgres:15-alpine
                env:
                    POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                    POSTGRES_DB: simple-bank
                options: >-
                  --health-cmd pg_isready
                  --health-interval 10s
                  --health-timeout 5s
                  --health-retries 5
                ports:
                    - 5432:5432
        steps:
            -   uses: actions/checkout@v3

            -   name: Setup Go
                uses: actions/setup-go@v3
                with:
                    go-version: '1.19.x'
                    cache: true

            -   name: Install SQLC
                run: go install github.com/kyleconroy/sqlc/cmd/sqlc@latest

            -   name: Install migrate
                run: |
                    curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
                    sudo mv migrate /usr/bin

            -   name: Install mockery
                run: |
                    curl -L https://github.com/vektra/mockery/releases/download/v2.15.0/mockery_2.15.0_Linux_x86_64.tar.gz | tar xvz
                    sudo mv mockery /usr/bin

            -   name: Install Task
                uses: arduino/setup-task@v1

            -   name: SQLC Generate
                run: task sqlc:generate

            -   name: Mock DB
                run: task db:mock

            -   name: Run migrations
                run: task migrate:up
                env:
                    DB_DSN: ${{ secrets.POSTGRES_DSN }}

            -   name: Test
                run: task app:test
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
                    POSTGRES_HOST: 127.0.0.1
                    APP_SECRET: ${{ secrets.APP_SECRET }}
                    APP_TOKEN_SYMMETRIC_KEY: ${{ secrets.APP_TOKEN_SYMMETRIC_KEY }}
